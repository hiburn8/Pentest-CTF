<?php 

//FUNCTIONS
//getlabsfromUserID
//getlabsfromUsername
//categoryicon

function dif2txt($diff) {
    switch ($diff) {
        case 5: return "Trivial"; break;
        case 10: return "Easy"; break;
        case 20: return "Medium"; break;
        case 50: return "Hard"; break;
        case 100: return "Extreme"; break;
        default: return '<img src="badges/error.png" title="oops, looks like there is a problem with this lab. please tell someone.">'; break;
    }
}

function getlabsfromUserID($mysqli, $id) {
    if ($stmt = $mysqli->prepare("SELECT labs.labname FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID WHERE users.userID = ?")) {
        
        $stmt->bind_param('i', $id);
        $stmt->execute();   // Execute the prepared query.
        $stmt->store_result();

        if ($stmt->num_rows > 0) {
            // If some labs exists get variables from result.
            $stmt->bind_result($lab);
            $labs = array();
            while($stmt->fetch()){
                array_push($labs, $lab);
             } 
             return $labs;
        }
    }
}

function getusernamefromUserID($mysqli, $id) {
 
    if ($stmt = $mysqli->prepare("SELECT username FROM users WHERE userID = ?")) {
    
        $stmt->bind_param('i', $id);
        $stmt->execute();   
        $stmt->store_result();

        if ($stmt->num_rows == 1) {
            // If the user exists get variables from result.
            $stmt->bind_result($username);
            $stmt->fetch();

            return $username;
        } else {
            // Fail 
            return false;
        }
    } 
}

function getlabsfromUsername($mysqli, $username) {
    if ($stmt = $mysqli->prepare("SELECT labs.labname FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID WHERE users.username = ?")) {
        
        $stmt->bind_param('s', $username);
        $stmt->execute();   // Execute the prepared query.
        $stmt->store_result();

        if ($stmt->num_rows > 0) {
            // If some labs exists get variables from result.
            $stmt->bind_result($lab);
            $labs = array();
            while($stmt->fetch()){
                array_push($labs, $lab);
             } 
             return $labs;
        }
    }
}

function getauthoredlabsfromUserID($mysqli, $userID) {
        if ($stmt = $mysqli->prepare("SELECT labname FROM labs WHERE authorID = ?")) {
            
            $stmt->bind_param('i', $userID);
            $stmt->execute(); 
            $stmt->store_result();

            if ($stmt->num_rows > 0) {
            // If some labs exists get variables from result.
            $stmt->bind_result($lab);
            $labs = array();
            while($stmt->fetch()){
                array_push($labs, $lab);
             } 
             return $labs;
        }
    }
}

function categoryIcon($category){
    switch ($category) {
        case 'Web': return '<img src="badges/web.png">'; break;
        case 'Mobile': return '<img src="badges/mobile.png">'; break;
        case 'Forensics': return '<img src="badges/forensics.png">'; break;
        case 'Reversing': return '<img src="badges/csharp.png">'; break;
        case 'Crypto': return '<img src="badges/crypto.png">'; break;
    }
}

//This function "timeBetween" is the only segment of code not written by me and was pilfered, lovingly, from here: 
//  http://urbanoalvarez.es/blog/2009/01/20/display-time-since-last-visit-in-php/
function timeBetween($start, $end=-1){
    if($end < 0) $end = time();

    $SECOND = 1;
    $MINUTE = 60 * $SECOND;
    $HOUR = 60 * $MINUTE;
    $DAY = 24 * $HOUR;
    $WEEK = 7 * $DAY;
    $MONTH = 30 * $DAY;
    $YEAR = 365 * $DAY;

    //$increments = [[$SECOND, 'second'],[$MINUTE, 'minute'],[$HOUR, 'hour'],[$DAY, 'day'],[$WEEK, 'week'],[$MONTH, 'month'],[$YEAR, 'year']];

    $increments = array(
       array($SECOND, 'second'),
       array($MINUTE, 'minute'),
       array($HOUR, 'hour'),
       array($DAY, 'day'),
       array($WEEK, 'week'),
       array($MONTH, 'month'),
       array($YEAR, 'year')
   );


    $diff = $end - $start;
    $plural = '';
    $units = ceil($diff/$increments[count($increments)-1][0]);
    $unit = $increments[count($increments)-1][1];
    
    for($i = 1; $i < count($increments); $i++){
        if($increments[$i-1][0] <= $diff && $diff < $increments[$i][0]){
            $units = ceil($diff/$increments[$i-1][0]);
            $unit = $increments[$i-1][1];
            break;
        }
    }
    if($units > 1) $plural = 's';
    return sprintf("%d %s%s", $units, $unit, $plural);
}


?>
