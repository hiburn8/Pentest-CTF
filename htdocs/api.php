<?php
require_once("mysqli_connect.php");

//FROM SUBMIT.php
function doihavethisflag($mysqli, $u, $f) {
        if ($stmt = $mysqli->prepare("SELECT labs.flag  FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID WHERE users.username = ? AND labs.flag = ?")) {
            
            $stmt->bind_param('ss', $u, $f);
            $stmt->execute();  
            $stmt->store_result();
 
           if ($stmt->num_rows == 1) {
                return true;
            }
            elseif ($stmt->num_rows > 1) {
                echo 'you already have this flag more than once somehow :S';
                return true;
            }
            else {
                return false;
            }
    }
    else {
        return 'database error';
    }
}

function isthismylab($mysqli, $author, $f) {
        if ($stmt = $mysqli->prepare("SELECT authorID FROM labs WHERE authorID = ? AND flag = ?")) {
            
            $stmt->bind_param('ss', $author, $f);
            $stmt->execute(); 
            $stmt->store_result();

           if ($stmt->num_rows == 1) {
                return true;
            }
            elseif ($stmt->num_rows > 1) {
                echo 'Error: this is very fishy! ';
                return true;
            }
            else {
                return false;
            }
    }
    else {
        return 'database error';
    }
}


function checkflagisrealandsubmitpwn($mysqli, $u, $f) {
    if ($stmt = $mysqli->prepare("select labID from labs where flag = ? UNION ALL select userID from users where username = ?")) {
        
        $stmt->bind_param('ss', $f,$u);
        $stmt->execute();   
        $stmt->store_result();

        if ($stmt->num_rows == 2) {

        	$stmt->bind_result($data);

           	for($i = 0; ($stmt->fetch()); $i++){
                //get lab and user IDs
           		if ($i == 0){
           			$labID = $data;
           		}
           		elseif ($i == 1) {
           			$userID = $data;
           		}   		
            }
            //echo '<br>' . $labID . '~' .  $userID . '<br>';
            if ($stmt = $mysqli->prepare("INSERT INTO `CTF`.`pwns` (`labID`, `userID`) VALUES (?, ?)")) {
        
                $stmt->bind_param('ss', $labID,$userID);
                $stmt->execute(); 
                return true;
            }
        }
        
    }
    else{
        echo 'database error';
    }
}
//FROM AUTH.php
function login_check($mysqli, $u, $p) {
 
        if ($stmt = $mysqli->prepare("SELECT userID FROM users WHERE username = ? AND password = ?")) {
            
            $stmt->bind_param('ss', $u, md5($p));
            $stmt->execute();   // Execute the prepared query.
            $stmt->store_result();
 
            if ($stmt->num_rows == 1) {
                // If the user exists get variables from result.
                $stmt->bind_result($userID);
                $stmt->fetch();

                //echo $password . '<br>' . $p . '  '  . hash('sha512', $p) . ' ' . md5($p);
                //$login_check = hash('sha512', $p);

                    // Logged In!!!!

                    return $userID;
                } else {
                    // Not logged in 
                    return false;
                }
            } 
    }
header('Content-Type: application/json');    

if(!count($_GET)) {
    echo "ready";
}

 if (isset($_GET['scoreboard'])){	
	$scoreboard_get = "SELECT users.username, users.registered, COUNT(pwns.userID) AS flags, SUM(labs.difficulty) as sumDifficulty FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID GROUP BY pwns.userID ORDER BY sumDifficulty DESC, flags DESC, users.registered DESC, username";
	$usrrlt = $dbc->query($scoreboard_get);

	$scoreboardrows = array();
    while($row = $usrrlt->fetch_assoc()){
      array_push($scoreboardrows, $row);
  	} 
	//var_dump($labs);
	$out = array_values($scoreboardrows);
	$jsondata = json_encode($out);
	echo $jsondata;
}

else if (isset($_GET['labs'])){
	$labs_get = "SELECT labname, category, difficulty, labdescription, url, (UNIX_TIMESTAMP(now()) - UNIX_TIMESTAMP(labs.created))/60/60/24 AS daysagocreated, users.username AS author FROM labs INNER JOIN users ON labs.authorID=users.userID";
	$usrrlt = $dbc->query($labs_get);

	$labsrows = array();
    while($row = $usrrlt->fetch_assoc()){
      array_push($labsrows, $row);
  	} 
	//var_dump($labs);
	$out = array_values($labsrows);
	$jsondata = json_encode($out);
	echo $jsondata;
}

else if (isset($_GET['allpwns'])){
	$pwns_get = "SELECT users.username, labs.labname FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID ORDER BY users.username";
	$pwnsrlt = $dbc->query($pwns_get);

	$pwnsrows = array();
    while($row = $pwnsrlt->fetch_assoc()){
      array_push($pwnsrows, $row);
  	} 
	//var_dump($labs);
	$out = array_values($pwnsrows);
	$jsondata = json_encode($out);
	echo $jsondata;
}


// FIX THE SQL INJECTION HERE !!!
if (isset($_GET['submit']) && isset($_GET['flag']) && isset($_GET['username']) && isset($_GET['password'])){

	$userID = login_check($dbc, $_GET['username'], $_GET['password']);
    if ($userID){

    	    if (doihavethisflag($dbc, $_GET["username"], $_GET['flag'])){
		        echo 'Sorry, you have already submitted that flag';
		    }
		    
		    elseif (isthismylab($dbc, $userID, $_GET['flag'])) {
		        echo 'That flag is for a lab created by you, silly. But at least it works!';
		    }
		    elseif (checkflagisrealandsubmitpwn($dbc, $_GET['username'], $_GET['flag'])) {
				echo 'Congratulations, flag successfully added!';
		   }
		   else{
		        echo 'Sorry, ' . htmlEntities($_GET['flag'], ENT_QUOTES) . ' is not a flag';
		   }

    } else {
        echo 'Username/Password Invalid';
    }





}




/*
// FIX THE SQL INJECTION HERE FIRST!!!
else if (isset($_GET['mylabs']) && isset($_GET['username'])){
	$mylabs_get = "SELECT labs.labname FROM `pwns` INNER JOIN labs ON labs.labID=pwns.labID INNER JOIN users on users.userID=pwns.userID WHERE users.username = " . $_GET['username'];
	$usrrlt = $dbc->query($mylabs_get);

	$mylabsrows = array();
    while($row = $usrrlt->fetch_assoc()){
      array_push($mylabsrows, $row);
  	} 
	//var_dump($labs);
	$out = array_values($mylabsrows);
	$jsondata = json_encode($out);
	echo $jsondata;
}
*/


?>


